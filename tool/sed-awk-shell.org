#+TITLE: Linux 三剑客: sed, awk 和 shell
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2019-07-18 Thu 14:51:42>
#+HTML_LINK_UP: ../readme.html
#+HTML_LINK_HOME: ../index.html
#+TAGS: sed awk shell


* sed
  sed 是 Linux 下著名的行编辑器
  #+BEGIN_SRC shell
    # 替换文件中首次出现的字符串
    sed 's/find/replace/' file
  #+END_SRC

* awk
  awk 一般用于文本预处理，并且支持编程
  #+BEGIN_SRC shell
    # -F 选项指定分隔符, 默认以空格分隔
    awk -F ':' '{print $1}' file

    # 使用正则表达式匹配过滤结果
    awk '/reg/ {print $5}' file
    awk '$1 ~ /reg/ {print $5}' file
    # 打印用户名以 b 开头的用户名
    awk -F ':' ' $1 ~ /^b/ {print $1}' /etc/passwd
  #+END_SRC

* shell
  shell 时 Linux 中的交互环境，常见的 shell 有 sh, bash, zsh, fish 等。我比较喜欢使用
  zsh, 但是目前的服务器端一般默认使用 bash, 这里基本上介绍 bash 脚本的一些知识

** 变量
   #+BEGIN_SRC shell
     # 定义变量
     var=value
     # 定义变量，并在子进程中使用变量
     var=value command

     # 查看变量的值
     echo $var

     # 特殊的变量
     echo $$ # 当前 shell 的进程号
     echo $! # 最近调用的后台任务进程
     echo $? # 最近一次命令的返回值
     echo $!

     # 添加环境变量
     export var=value
   #+END_SRC

** 数组
   #+BEGIN_SRC shell
     # 定义数组
     array[0]=valA
     array[1]=valB
     array[2]=valC

     array=([0]=valA [1]=valB [2]=valC)
     array=(valA valB valC)

     # 取得数组中的元素
     ${array[i]}
     # 取得数组的长度
     ${#array[@]}
     # 取得数组中某个变量的长度
     ${#array[i]}

     # 查看所有数组
     declare -a
   #+END_SRC

* link
  1. [[https://github.com/skywind3000/awesome-cheatsheets/blob/master/languages/bash.sh][bash]]
