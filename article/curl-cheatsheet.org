#+TITLE: CRUL 工具
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2018-11-03 Sat>
#+TAGS: curl api download

[[file:../resource/image/2018/11/everything-curl.png]]

* 常见用法

** 获取网页

直接使用 curl 后面添加网站地址就可以将网站的内容抓取下来。

#+BEGIN_SRC sh
  curl http://www.example.com/
#+END_SRC

** 保存文件

使用 *-o* 选项可以将下载的内容保存成相应的文件，并命名成给定的文件名。

#+BEGIN_SRC sh
  curl -o example.html http://www.example.com/
#+END_SRC

使用 *-O* 选项将下载的内容保存成 url 最后给定的文件名，如下例子中将会把文件命名
成 index.html

#+BEGIN_SRC sh
  curl -O www.haxx.se/index.html
#+END_SRC

** 用户名/密码

有时候下载 ftp 中的内容需要用户名和密码，可以使用 *-u* 选项添加用户名和密码。

#+BEGIN_SRC sh
  curl -u name:passwd ftp://machine.domain:port/full/path/to/file
#+END_SRC

** 返回 header 和 code

使用 *-i* 选项可以参考网页的给出的返回头相关信息。

#+BEGIN_SRC sh
  curl -i www.example.com
#+END_SRC

#+BEGIN_EXAMPLE
HTTP/1.1 200 OK
Accept-Ranges: bytes
Cache-Control: max-age=604800
Content-Type: text/html; charset=UTF-8
Date: Sat, 03 Nov 2018 14:36:06 GMT
Etag: "1541025663"
Expires: Sat, 10 Nov 2018 14:36:06 GMT
Last-Modified: Fri, 09 Aug 2013 23:54:35 GMT
Server: ECS (lga/13A4)
Vary: Accept-Encoding
X-Cache: HIT
Content-Length: 1270

...
#+END_EXAMPLE

可以使用下面命令来将 header 下载起来保存成文件。

#+BEGIN_SRC sh
  curl --dump-header headers.txt www.example.com
#+END_SRC

有时候我们在写脚本是仅仅需要参考网站的返回码，为了方便解析可以使用下面命令直接获
取返回码。

#+BEGIN_SRC sh
  curl -q -s -w %{http_code} www.example.com
#+END_SRC

** 代理

curl 还支持 HTTP 和 SOCKS 协议的代理。可以使用 *-x* 选项了设置代理服务器的地址和
端口号信息。

#+BEGIN_SRC sh
  curl -x my-proxy:888 ftp://ftp.leachsite.com/README
  curl -u user:passwd -x my-proxy:888 http://www.get.this/
#+END_SRC

** 分片下载 (Range)

可以使用 *-r* 选项来分片下载文件。

#+BEGIN_SRC sh
  # Get the first 100 bytes of a document
  curl -r 0-99 http://www.get.this/
  # Get the last 500 bytes of a document
  curl -r -500 http://www.get.this/
#+END_SRC

** 上传

使用 curl 的 *-T* 选项来指定上传文件。

#+BEGIN_SRC sh
  # upload all data on stdin to a specified server
  curl -T - ftp://ftp.upload.com/myfile
  # upload file with username and password
  curl -T uploadfile -u user:passwd ftp://ftp.upload.com/
  # upload file to get append to the remote file
  curl -T localfile -a ftp://ftp.upload.com/remotefile
#+END_SRC

使用 smb 协议上传文件。

#+BEGIN_SRC sh
  curl -T file.txt -u "domain\username:passwd" smb://server.example.com/share/
#+END_SRC


* API 测试

** POST 数据

在测试 API 联通时常常需要 POST 一下数据，使用 *-d* 选项可以 POST 数据。这里的数
据部分必须是事先编码好的。

#+BEGIN_SRC sh
  curl -d "name=Rafael%20Sagula&phone=3320780" http://www.where.com/guest.cgi
#+END_SRC

使用 *-d* 选项的局限性是只能使用普通键值对方式的参数，如果需要 POST 文件内容参数
则需要使用 *-F* 选项。 *-F* 选项使用 ~@<filename>;type=<mime-type>~ 这种方式来编
码所要上传的文件。如果没有给定 mime-type 则 curl 根据文件后缀名来猜测。如下命令
中上传了三个文件。

#+BEGIN_SRC sh
  curl -F "coolfiles=@fil1.gif;type=image/gif,fil2.txt,fil3.html" http://www.post.com/postit.cgi
#+END_SRC

上传文件并且添加其它字段的例子。

#+BEGIN_SRC sh
  curl -F "file=@cooltext.txt" -F "yourname=Daniel" \
    -F "filedescription=Cool text file with cool text inside" \
    http://www.post.com/postit.cgi
#+END_SRC

** USER AGENT

使用 *-A* 选项知道 USER-AGENT。

#+BEGIN_SRC sh
  curl -A 'Mozilla/3.0 (Win95; I)' www.baidu.com
#+END_SRC

** 处理 cookie

由于 HTTP 协议是无状态的，所以有些网站是使用 cookie 来记录会话信息。对于chrome
这样的浏览器，可以轻易处理 cookie 信息，但在 curl 中只要增加相关参数也是可以很容
易的处理 cookie 。如下， *-c* 选项可以将获取到的 cookie 保存成文件。

#+BEGIN_SRC sh
  curl -c cookie.txt http://www.baidu.com
#+END_SRC

使用 *-b* 可以指定 cookie 字段。

#+BEGIN_SRC sh
  curl -b "name=Daniel" www.sillypage.com
#+END_SRC

读写同一个 cookie 文件。

#+BEGIN_SRC sh
  curl -b cookies.txt -c cookies.txt www.example.com
#+END_SRC


* 参考链接

1. [[https://curl.haxx.se/][curl]]
2. [[https://curl.haxx.se/docs/manual.html][curl manual]]
3. [[https://ec.haxx.se/][everything curl]]
