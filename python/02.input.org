#+TITLE: Python 读取用户输入
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2018-10-23 Tue>
#+TAGS: python programming input


* raw_input & input

Python3.x 里面已经把 ~raw_input()~ 给去掉了。事实上是这样的：在 Python3.x 内，
将~raw_input()~ 重命名为 ~input()~ ，这样一来，无须导入也能从标准输入获得数据了。
如果您需要保留版本 Python2.x 的 ~input()~ 功能，可以使用 ~eval(input())~ ，效果
基本相同。Python2.x 中， ~raw_input()~ 会从标准输入 ~sys.stdin~ 读取一个输入并返
回一个字符串，且尾部的换行符从末尾移除。其中关于读取用户输入的样例如下：

#+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :session default
  import os, sys

  if __name__ == '__main__' :
    # read raw string
    name = raw_input('name = ')
    print('your name is ' + name)

    # read a expression, for example, integer
    age = input('age = ')
    print(age+1)
#+END_SRC


* 命令行输入

** sys.argv

~sys.argv~ 其实是一个列表，在可以直接读取，用法如下：

#+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :exports both :session default :results output pp
  import sys
  if __name__ == '__main__':
    print(sys.argv)
#+END_SRC

#+RESULTS:
: ['']

** argparse

~argparse~ 是 Python 的标准库，可以用来解析命令行参数，非常好用。

#+BEGIN_SRC python :preamble "# -*- coding: utf-8 -*-" :exports both :session default :results output pp
  import argparse

  if __name__ == '__main__':
      parser = argparse.ArgumentParser(description="short decription for this command.")
      parser.add_argument("-v", "--verbose", action="store_true", help="boolean for verbose")
      parser.add_argument("-a", "--paraA", type=float)
      parser.add_argument("-b", "--paraB", type=float)
      parser.add_argument("folders", nargs='+', help="list of folders")
      args = parser.parse_args()

      yourfunc(args.paraA, args.paraB)
#+END_SRC


* 参考链接

1. [[https://docs.python.org/3/library/argparse.html][argparse doc]]
