#+TITLE: TensorFlow
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2020-10-18 Sun 10:31:32>
#+HTML_LINK_UP: ../readme.html
#+HTML_LINK_HOME: ../index.html
#+SETUPFILE: ~/.emacs.d/site-lisp/org-html-themes/setup/theme-readtheorg-local.setup
#+TAGS: tensorflow python36 py36 vision


* 初始配置
  导入 TensorFlow 包
  #+BEGIN_SRC python :session cpython :exports both :results output pp
    import tensorflow as tf
    import numpy as np
    print(tf.version.VERSION)
  #+END_SRC

  #+RESULTS:
  : 1.13.1

  如果需要屏蔽 TensorFlow 的 c++ 代码的警告信息，使用下面的配置。级别 1 是提示，
  级别 2 是警告，级别 3 是错误
  #+BEGIN_SRC python :session cpython :exports both :results none
    import os
    os.environ['TF_CPP_MIN_LOG_LEVEL']='2'
  #+END_SRC

* 会话管理
  定义一个常量，然后直接在 TensorFlow 上运行，测试环境配置成功
  #+BEGIN_SRC python :session cpython :exports both :results output pp
    four = tf.constant(4)

    with tf.Session() as sess:
        print(sess.run(four))
  #+END_SRC

  #+RESULTS:
  : 4

  直接使用会话的配置
  #+BEGIN_SRC python :session cpython :exports both :results output pp
    v1 = tf.constant([1, 2, 3, 4])
    v2 = tf.constant([2, 2, 2, 2])

    sess = tf.Session()
    v3 = v1 + v2
    v4 = v1 * v2

    print(sess.run(v3))
    print(sess.run(v4))

    sess.close()
  #+END_SRC

  #+RESULTS:
  : [3 4 5 6]
  : [2 4 6 8]

  交互式会话可以用于简单的代码调试
  #+BEGIN_SRC python :session cpython :exports both :results output pp
    sess = tf.InteractiveSession()
    I = tf.eye(4)
    print(I.eval())
  #+END_SRC

  #+RESULTS:
  : [[1. 0. 0. 0.]
  :  [0. 1. 0. 0.]
  :  [0. 0. 1. 0.]
  :  [0. 0. 0. 1.]]

* 数据：常量、变量和占位符
** 常量
   初始化常量操作如下
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     t0 = tf.zeros([2, 3], tf.int32)
     t1 = tf.ones([2, 3], tf.float32)
     t2 = tf.random_normal([2, 3], mean=2.0, stddev=4, seed=15)

     with tf.Session() as sess:
         print(sess.run(t1))
         print(sess.run(t2))
   #+END_SRC

   #+RESULTS:
   : [[1. 1. 1.]
   :  [1. 1. 1.]]
   : [[ 4.818309    2.509685    6.23806   ]
   :  [ 3.6950598   0.98155856 -1.4288127 ]]
** 变量
   它们通过使用变量类来创建。变量的定义还包括应该初始化的常量/随机值。
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     w = tf.Variable(tf.random_normal([100, 100], stddev=2))
     b = tf.Variable(tf.zeros([100]), name='biases')
   #+END_SRC

   初始化所有全局变量
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     init_op = tf.global_variables_initializer()
   #+END_SRC

   常见的变量的初始器
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     t1 = tf.random_normal([6], mean=2.0, stddev=4)
     t2 = tf.truncated_normal([6], stddev=3)
     t3 = tf.random_uniform([6], maxval=5)

     with tf.Session() as sess:
         r1, r2, r3 = sess.run([t1, t2, t3])
         print('r1 =', r1)
         print('r2 =', r2)
         print('r3 =', r3)
   #+END_SRC

   #+RESULTS:
   : r1 = [-2.6633506 -1.3341477  5.326619   1.3697977  0.9351698  0.6483228]
   : r2 = [-4.758824  -3.3757558 -1.1747     4.5159097  1.2751957 -2.6835222]
   : r3 = [2.1085625 0.3304249 4.7166862 1.0353857 2.824891  1.3067412]

   保存变量
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     saver = tf.train.Saver()
   #+END_SRC

   很多时候需要大规模的常量张量对象；在这种情况下，为了优化内存，最好将它们声明
   为一个可训练标志设置为 False 的变量：
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     t_large = tf.Varible(large_array, trainable=False)
   #+END_SRC

** 占位符
   占位符，它们用于将数据提供给计算图。
   #+BEGIN_SRC python :session cpython :exports both :results output pp
     x = tf.placeholder("float")
     y = 2 * x

     din = np.random.normal(0, 0.1, 4)
     print(din)
     with tf.Session() as sess:
         res = sess.run(y, feed_dict={x: din})
         print(res)
   #+END_SRC

   #+RESULTS:
   : [-0.06331706 -0.02488422  0.00218056 -0.06788603]
   : [-0.12663412 -0.04976845  0.00436112 -0.13577206]

* 矩阵
  #+BEGIN_SRC python :session cpython :exports both :results output pp

  #+END_SRC
* 附录
  安装 TensorFlow 之前最好是配合 Anaconda3 发行版一起安装，安装好 Anaconda 过后直接
  使用下面命令安装
  #+BEGIN_SRC sh
    conda install tensorflow==1.13.1
  #+END_SRC

  或者使用 pip 安装
  #+BEGIN_SRC sh
    conda install tensorflow==1.13.1
  #+END_SRC

* 连接
  1. [[https://tensorflow.google.cn/][Tensorflow]]
