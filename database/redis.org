#+TITLE: Redis
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2021-07-07 Wed 16:51:42>
#+HTML_LINK_UP: ../readme.html
#+HTML_LINK_HOME: ../index.html
#+SETUPFILE: ~/.emacs.d/site-lisp/org-html-themes/setup/theme-readtheorg-local.setup
#+TAGS: memory redis


* Redis 特性
  1. 速度快
     - 内存数据库
     - I/O 多路复用
     - 协议简单
     - C 语言开发
  2. 键值对的数据结构服务器
     - key 永远是 String
     - value 可以
  3. 丰富的功能
  4. 简单稳定
     - 主线程是单线程
  5. 持久化
     - RDB (Redis DataBase)
     - AOF (Append-Only File)
  6. 主从复制
  7. 高可用和分布式转移
  8. 客户端语言多

* Redis 使用场景
  1. 缓存数据库
  2. 排行榜
  3. 计数器
  4. 社交网络
  5. 消息队列
  6. 分布式锁

* Redis 的安装及使用
  下载并安装
  #+BEGIN_SRC sh
    wget https://download.redis.io/releases/redis-6.2.5.tar.gz
    tar xzf redis-6.2.5.tar.gz
    cd redis-6.2.5
    make
  #+END_SRC

  启动 Redis Server
  #+BEGIN_SRC sh
    src/redis-server
  #+END_SRC

  客户端连接 Redis
  #+BEGIN_SRC sh
    $ src/redis-cli
    redis> set foo bar
    OK
    redis> get foo
    "bar"
  #+END_SRC

* Redis 的数据类型
  1. string 字符串, 整数, 浮点数
     - get/set 单个键设置和查找
     - mset 多个键设置
  2. hash 哈希表
     - hmset/hgetall
     - 物理存储会在 ziplist 和 hashtable 两种类型中转换
  3. list 列表
  4. set 集合
  5. zset 有序集合

  整数操作
  #+BEGIN_SRC text
    127.0.0.1:6379> flushdb
    OK
    127.0.0.1:6379> set hello 'world'
    OK
    127.0.0.1:6379> keys *
    1) "hello"
    127.0.0.1:6379> get hello
    "world"
    127.0.0.1:6379> append hello '!'
    (integer) 6
    127.0.0.1:6379> get hello
    "world!"
  #+END_SRC

  计数器
  #+BEGIN_SRC text
    127.0.0.1:6379> set count 1
    OK
    127.0.0.1:6379> incr count
    (integer) 2
    127.0.0.1:6379> get count
    "2"
    127.0.0.1:6379> incr count
    (integer) 3
    127.0.0.1:6379>
  #+END_SRC

  哈希使用
  #+BEGIN_SRC text
    127.0.0.1:6379> flushdb
    OK
    127.0.0.1:6379> hmset user name zhang age 12
    OK
    127.0.0.1:6379> hgetall user
    1) "name"
    2) "zhang"
    3) "age"
    4) "12"
  #+END_SRC

* 相关连接
  1. [[https://redis.io/][Redis Official Site]]
