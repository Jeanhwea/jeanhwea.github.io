#+TITLE: InnoDB 存储引擎
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2021-07-07 Wed 09:41:29>
#+HTML_LINK_UP: ../readme.html
#+HTML_LINK_HOME: ../index.html
#+SETUPFILE: ~/.emacs.d/site-lisp/org-html-themes/setup/theme-readtheorg-local.setup
#+TAGS: mysql innodb storage-engine


* InnoDB 体系结构

  MySQL 的 InnoDB 存储引擎体系结构如下图所示

  [[file:../static/image/2021/07/innodb-architecture.png]]

  对照 MySQL 数据目录下的文件，可以找到对应的数据项如下
  #+BEGIN_SRC text
    /usr/local/mysql/data $ ll
    -rw-r----- 1 mysql mysql        56 May 21 09:58 auto.cnf
    -rw-r----- 1 mysql mysql 139311228 Jul  7 09:48 binlog.000001
    -rw-r----- 1 mysql mysql        16 Jun 22 08:14 binlog.index
    -rw-r----- 1 mysql mysql     11811 Jun 22 08:14 ib_buffer_pool
    -rw-r----- 1 mysql mysql  79691776 Jul  7 08:23 ibdata1
    -rw-r----- 1 mysql mysql  50331648 Jul  7 08:23 ib_logfile0
    -rw-r----- 1 mysql mysql  50331648 Jul  6 13:26 ib_logfile1
    -rw-r----- 1 mysql mysql  12582912 Jul  7 09:30 ibtmp1
    drwxr-x--- 2 mysql mysql      4096 May 21 09:58 mysql
    drwxr-x--- 2 mysql mysql      8192 May 21 09:58 performance_schema
    drwxr-x--- 2 mysql mysql      8192 May 21 09:58 sys
  #+END_SRC

  备注：
  - =O_DIRECT= 一般如果在 Linux 内核中读写一个文件，其 IO 流程都需要经过 Kernel
    内的 Page Cache 层次，若想要使用自己开发的缓存系统，那么就可以在打开这个文件
    的时候， 对该文件加以 =O_DIRECT= 的标志位，这样一来就可以让程序对该文件的 IO
    直接在磁盘上进行，从而避开了 Kernel 的 Page Cache，进而对 IO 流程里的块数据
    进行拦截，让其流入到自己开发的缓存系统内
  - Redo Log 是循环写入多个文件的，当文件写满可能会触发 checkpoint

* InnoDB 内存结构
** Buffer Pool

** Change Buffer

* InnoDB 磁盘结构
